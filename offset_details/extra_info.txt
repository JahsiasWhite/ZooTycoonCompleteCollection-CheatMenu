# Interesting memory addresses

## Sets the fence to be of type "tank"
        004c2e7c 88 9e 93        MOV        byte ptr [ESI + 0x193],BL
                 01 00 00



 004bb9e5



Good way to find values:
Find the set_attribute_wrapper function on Ghidra. Put a breakpoint on the call, then one inside where the output_pointer is set. Now you have the value and where to modify it


These are known objects in the game and their known attributes. These are set in the code but many memory addresses are still unkown
Objects:

Game Config:
Base = "zoo.exe"+00238048
GameObject {
  AngryAnimalsSickChange: 0, [4-byte] (base + 0x6c) -- Not sure what this does
  PctSick: 0, [4-byte] (base + 0x70) -- Not sure what this does
  PctProtestors: 17.45, [float] (base + 0x74)
  AngryHungryGuestsChange: 1000, [4-byte] (base + 0x78)
  set_config_item(s_characteristics_0063f5c4,s_cPctHungry_00641b94,config_base + 0x7c); ?? NaN
  AngryThirstyGuestsChange: .3, [float] (base + 0x80)
  PctThirsty: .3, [float] (base + 0x84)
  set_attribute(s_characteristics_0063f5c4,s_cAngryBathroomGuestsChange_00642098,config_base + 0x88) ?? NaN
  PctBathroom: .2, [float] (base + 0x8c)
  set_attribute(s_characteristics_0063f5c4,s_cAngrySouvenirGuestsChange_0064206c,config_base + 0x90) ?? NaN
  PctSouvenir: .2, [float] (base + 0x94)
  set_attribute(s_characteristics_0063f5c4,s_cAngryRemoveAnimalChange_00642040,config_base + 0x98) ?? NaN
  AngryTiredGuestsChange: .3, [float] (base + 0x9c)
  PctTired: NaN, (base + 0xa0) ?? NaN
  AngryTrashGuestsChange: .7, [float] (base + 0xa4)
  PctTrash: NaN, (base + 0xa8) ?? NaN
  CreateGuestChanceVeryLow: NaN, (base + 0xac)
  CreateGuestChanceLow: .3, [float] (base + 0xb0)
  CreateGuestChanceMed: NaN, (base + 0xb4)
  CreateGuestChanceHigh: .4, [float] (base + 0xb8)
  CreateGuestChanceVeryHigh: 3, [4-bytes] (base + 0xbc)
  LoanAvailable: 5, [4-bytes] (base + 0xc0)
  HighZooValueChange: 25, [4-bytes] (base + 0xc4)
  set_attribute(s_characteristics_0063f5c4,s_cLowZooValueChange_00641f40,config_base + 200);
  set_config_item(s_characteristics_0063f5c4,s_cHighZooValue_00641f30,config_base + 0xcc);
  set_config_item(s_characteristics_0063f5c4,s_cLowZooValue_00641f20,config_base + 0xd0);
  set_attribute(s_characteristics_0063f5c4,s_cHighSpeciesThreshold_00641f08,config_base + 0xd4);
  set_attribute(s_characteristics_0063f5c4,s_cHappyDiverseAnimalsChange_00641eec,config_base + 0xd8)
  ;
  set_attribute(s_characteristics_0063f5c4,s_cLowSpeciesThreshold_00641ed4,config_base + 0xdc);
  set_attribute(s_characteristics_0063f5c4,s_cAngryDiverseAnimalsChange_00641eb8,config_base + 0xe0)
  ;
  set_attribute(s_characteristics_0063f5c4,s_cHighAvgAnimalHappyThreshold_00641e98,
                config_base + 0xe4);
  set_attribute(s_characteristics_0063f5c4,s_cHappyAnimalsChange_00641e84,config_base + 0xe8);
  set_attribute(s_characteristics_0063f5c4,s_cLowAvgAnimalHappyThreshold_00641e68,config_base + 0xec
               );
  set_attribute(s_characteristics_0063f5c4,s_cAngryAnimalsChange_00641e54,config_base + 0xf0);
  set_attribute(s_characteristics_0063f5c4,s_cHighAvgGuestHappyThreshold_00641e38,config_base + 0xf4
               );
  set_attribute(s_characteristics_0063f5c4,s_cHappyGuestChange_00641e24,config_base + 0xf8);
  set_attribute(s_characteristics_0063f5c4,s_cLowAvgGuestHappyThreshold_00641e08,config_base + 0xfc)
  ;
  set_attribute(s_characteristics_0063f5c4,s_cAngryGuestChange_00641df4,config_base + 0x100);
  set_config_item(s_characteristics_0063f5c4,s_cItemCheap_00641de8,config_base + 0x104);
  set_config_item(s_characteristics_0063f5c4,s_cItemExpensive_00641dd8,config_base + 0x108);
  set_config_item(s_characteristics_0063f5c4,s_cHighZooEsthetic_00641dc4,config_base + 0x10c);
  set_attribute(s_characteristics_0063f5c4,s_cHighZooEstheticChange_00641dac,config_base + 0x110);
  set_config_item(s_characteristics_0063f5c4,s_cLowZooEsthetic_00641d9c,config_base + 0x114);
  set_attribute(s_characteristics_0063f5c4,s_cLowZooEstheticChange_00641d84,config_base + 0x118);
  set_config_item(s_characteristics_0063f5c4,s_cResearchCost_00641d74,config_base + 0x11c);
  set_config_item(s_characteristics_0063f5c4,s_cAdmissionMultiple_00641d60,config_base + 0x1170);
  set_attribute(s_characteristics_0063f5c4,s_cDonationsAvail_00641d50,config_base + 0x124);
  set_attribute(s_characteristics_0063f5c4,s_cDonationLow_00641d40,config_base + 0x128);
  set_attribute(s_characteristics_0063f5c4,s_cDonationHigh_00641d30,config_base + 300);
  set_attribute(s_characteristics_0063f5c4,s_cDonationChance_00641d20,config_base + 0x130);
  SpeciesAvailable: 3, [4-bytes] (base + 0x134)
  set_attribute(s_characteristics_0063f5c4,s_cMembershipJoinFactor_00641cf4,config_base + 0x13c);
  set_attribute(s_characteristics_0063f5c4,s_cMembershipJoinHappiness_00641cd8,config_base + 0x138);
  set_attribute(s_characteristics_0063f5c4,s_cEndowmentGiftLow_00641cc4,config_base + 0x140);
  set_attribute(s_characteristics_0063f5c4,s_cEndowmentGiftHigh_00641cb0,config_base + 0x144);
  set_attribute(s_characteristics_0063f5c4,s_cMembershipJoinChance_00641c98,config_base + 0x148);

        PricingFactor: 0.75, [4-bytes] (0x115C Offset) // ?
        DonationFactor: 0, [4-bytes] (0x1160 Offset) // ?
        BuildingUseCostDefault: 3, [4-bytes] (0x1164 Offset) // ?
        BuildingUseCostMax: 30, [4-bytes] (0x1168 Offset) // ?
        ZooDooRecylcingAmount: 50, [4-bytes] (0x116C Offset) // ?
        MinAdultAdmissionPrice: 0, [4-bytes] (0x1154 Offset)  // Minimum you can set the ticket price
        MaxAdultAdmissionPrice: 100, [4-bytes] (0x1158 Offset)  // Maximum you can set the ticket price ! Actually x1168, all of these are!
        
}

Animals:
To get animals, find max happiness. First value will be x050 (80.0). Can get from: 004b74c0 where initialHappiness is called
Animal {
  Habitat: 
  Location:
  &DAT_0063f8b0
  Attractiveness:
    ;
    bVar8 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cHungerThreshold_0063fc34,param_1_00 + 0x83,
                      temp_value,(char)uStack_10);
    bVar9 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cHungerIncrement_0063fc20,param_1_00 + 0x85,
                      temp_value,(char)uStack_10);
    bVar10 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cHungryHealthChange_00640724,param_1_00 + 0x84,
                        temp_value,(char)uStack_10);
    set_attribute_wrapper(param_1_00,current_animal?,s_cFoodUnitValue_00640714,param_1_00 + 0x86,0,0);
    bVar11 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cKeeperFoodUnitsEaten_006406fc,param_1_00 + 0x87,
                        temp_value,(char)uStack_10);
    bVar12 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cNeededFood_00640814,param_1_00 + 0x88,temp_value
                        ,(char)uStack_10);
    bVar13 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cNoFoodChange_00640694,param_1_00 + 0x89,
                        temp_value,(char)uStack_10);
    bVar14 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cInitialHappiness_0063fca8,param_1_00 + 0x8a,
                        temp_value,(char)uStack_10);
    bVar15 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cMaxHits_00640808,param_1_00 + 0x8d,temp_value,
                        (char)uStack_10);
    bVar16 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cPctHits_006407fc,param_1_00 + 0x8f,temp_value,
                        (char)uStack_10);
    bVar17 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cMaxEnergy_0063fc9c,param_1_00 + 0x92,temp_value,
                        (char)uStack_10);
    set_attribute_wrapper(param_1_00,current_animal?,s_cMinDirty_006407f0,param_1_00 + 0x95,0,0);
    set_attribute_wrapper(param_1_00,current_animal?,s_cMaxDirty_006407e4,param_1_00 + 0x94,0,0);
    bVar18 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cSickChange_0063fc90,param_1_00 + 0x96,temp_value
                        ,(char)uStack_10);
    bVar19 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cOtherAnimalSickChange_006407cc,param_1_00 + 0x97
                        ,temp_value,(char)uStack_10);
    bVar20 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cSickChance_0063fc84,param_1_00 + 0x98,temp_value
                        ,(char)uStack_10);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cSickRandomChance_006407b8,param_1_00 + 0x99,0,0);
    bVar21 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cCrowd_006407b0,param_1_00 + 0x9a,temp_value,
                        (char)uStack_10);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cCrowdHappinessChange_00640798,param_1_00 + 0x9b,0,0);
    bVar22 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cCaptivity_0064078c,param_1_00 + 0x9d,temp_value,
                        (char)uStack_10);
  ReproductionChance
                        temp_value,(char)uStack_10);
    bVar24 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cReproductionInterval_00640760,param_1_00 + 0x9f,
                        temp_value,(char)uStack_10);
    bVar25 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cMatingType_00640754,param_1_00 + 0xa0,temp_value
                        ,(char)uStack_10);
    bVar26 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cOffspring_00640748,param_1_00 + 0xa1,temp_value,
                        (char)uStack_10);
    piVar46 = param_1_00 + 0xa2;
    bVar27 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cKeeperFrequency_00640680,piVar46,temp_value,
                        (char)uStack_10);
    bStack_532 = bStack_532 & bVar4 & bVar5 & iVar38 != 0 & iVar30 != 0 & bVar6 & bVar7 & bVar8 &
                bVar9 & bVar10 & bVar11 & bVar12 & bVar13 & bVar14 & bVar15 & bVar16 & bVar17 &
                bVar18 & bVar19 & bVar20 & bVar21 & bVar22 & bVar23 & bVar24 & bVar25 & bVar26 &
                bVar27;
    if (*piVar46 < 3) {
      if (*piVar46 < 0) {
        *piVar46 = 0;
        goto LAB_005d7c70;
      }
    }
    else {
      *piVar46 = 2;

    bVar5 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cNotEnoughKeepersChange_00640668,param_1_00 + 0xa4
                      ,temp_value,(char)uStack_10);
    bVar6 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cSocial_00640660,param_1_00 + 0xa5,temp_value,
                      (char)uStack_10);
    bVar7 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cHabitatPreference_0064064c,param_1_00 + 0xaf,
                      temp_value,(char)uStack_10);
    bVar8 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cOtherAnimalAngryChange_00640634,param_1_00 + 0xbd
                      ,temp_value,(char)uStack_10);
    set_attribute_wrapper(param_1_00,current_animal?,s_cFlies_0064062c,param_1_00 + 0xbe,0,0);
    param_1_00[0xbf] = DAT_0063ffa4;
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cKeeperArrivesChange_0063fff4,param_1_00 + 0xbf,0,0);
    param_1_00[0xc0] = DAT_0063ffa8;
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cKeeperArrivesChangeAmphibious_0063ffd4,param_1_00 + 0xc0,
              0,0);
    bVar9 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cHappyHabitatChange_00640618,param_1_00 + 0xc1,
                      temp_value,(char)uStack_10);
    bVar10 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cAngryHabitatChange_00640604,param_1_00 + 0xc2,
                        temp_value,(char)uStack_10);
    bVar11 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cVeryAngryHabitatChange_006405ec,
                        param_1_00 + 0xc3,temp_value,(char)uStack_10);
    bVar12 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cPctHabitat_006405e0,param_1_00 + 0xc4,temp_value
                        ,(char)uStack_10);
    bVar13 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cAllCrowdedChange_006405cc,param_1_00 + 0xc6,
                        temp_value,(char)uStack_10);
    bVar14 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cHabitatSize_006405bc,param_1_00 + 0xa6,
                        temp_value,(char)uStack_10);
    bVar15 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cNumberAnimalsMin_006405a8,param_1_00 + 0xa7,
                        temp_value,(char)uStack_10);
    bVar16 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cNumberAnimalsMax_00640594,param_1_00 + 0xa8,
                        temp_value,(char)uStack_10);
    bVar17 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cNumberMinChange_00640580,param_1_00 + 0xab,
                        temp_value,(char)uStack_10);
    bVar18 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cNumberMaxChange_0064056c,param_1_00 + 0xac,
                        temp_value,(char)uStack_10);
    bVar19 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cBabyBornChange_0064055c,param_1_00 + 199,
                        temp_value,(char)uStack_10);
    bVar20 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cEnergyIncrement_0063fc70,param_1_00 + 200,
                        temp_value,(char)uStack_10);
    bVar21 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cEnergyThreshold_0063fc5c,param_1_00 + 0xc9,
                        temp_value,(char)uStack_10);
    set_attribute_wrapper(param_1_00,current_animal?,s_cDirtyIncrement_0064054c,param_1_00 + 0xca,0,0)
    ;
    set_attribute_wrapper(param_1_00,current_animal?,s_cDirtyThreshold_0064053c,param_1_00 + 0xcb,0,0)
    ;
    bVar22 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cSickTime_00640530,param_1_00 + 0xcc,temp_value,
                        (char)uStack_10);
    bVar23 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cNoFoodChange_00640694,param_1_00 + 0x89,
                        temp_value,(char)uStack_10);
    bVar24 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cBabyToAdult_00640520,param_1_00 + 0xd1,
                        temp_value,(char)uStack_10);
    bVar25 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cOtherFood_00640514,param_1_00 + 0xd2,temp_value,
                        (char)uStack_10);
    bVar4 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cAnimalDensity_00640504,param_1_00 + 0xc5,
                      temp_value,(char)uStack_10);
    bVar4 = bStack_532 & bVar5 & bVar6 & bVar7 & bVar8 & bVar9 & bVar10 & bVar11 & bVar12 & bVar13 &
            bVar14 & bVar15 & bVar16 & bVar17 & bVar18 & bVar19 & bVar20 & bVar21 & bVar22 & bVar23 &
            bVar24 & bVar25 & bVar4;
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cMurkyWaterThreshold_006404ec,param_1_00 + 0x109,
              temp_value,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cVeryMurkyWaterThreshold_006404d0,param_1_00 + 0x10a,
              temp_value,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cExtremelyMurkyWaterThreshold_006404b0,param_1_00 + 0x10b,
              temp_value,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cMurkyWaterChange_0064049c,param_1_00 + 0x10c,temp_value,0
              );
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cVeryMurkyWaterChange_00640484,param_1_00 + 0x10d,
              temp_value,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cExtremelyMurkyWaterChange_00640468,param_1_00 + 0x10e,
              temp_value,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cPooWaterImpact_00640458,param_1_00 + 0x112,temp_value,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cMurkyWaterHealthChange_00640440,param_1_00 + 0x10f,
              temp_value,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cVeryMurkyWaterHealthChange_00640424,param_1_00 + 0x110,
              temp_value,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cExtremelyMurkyWaterHealthChange_00640400,
              param_1_00 + 0x111,temp_value,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cBreathThreshold_006403ec,param_1_00 + 0x7f,0,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cBreathIncrement_006403d8,param_1_00 + 0x80,0,0);
    cVar3 = FUN_004055e2();
    if (cVar3 == '\0') {
      bVar5 = FUN_004b557b(current_animal?,s_cPrey_006403d0);
      bVar4 = bVar4 & bVar5;
    }
    else {
      iVar38 = FUN_00405223();
      param_1_00[0x123] = iVar38;
    }
    set_attribute_wrapper(param_1_00,current_animal?,s_cKeeper_006403c8,param_1_00 + 0xbc,0,0);
    bVar5 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cTreePref_006403bc,param_1_00 + 0xd3,temp_value,
                      (char)uStack_10);
    cVar3 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cKeeperFoodType_0063faa0,&stack0xfffffad8,0,0);
    if (cVar3 != '\0') {
      param_1_00[0xf2] = 0;
    }
    bVar7 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cRockPref_006403b0,param_1_00 + 0xd4,temp_value,
                      (char)uStack_10);
    bVar8 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cSpacePref_006403a4,param_1_00 + 0xd5,temp_value,
                      (char)uStack_10);
    bVar9 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cElevationPref_00640394,param_1_00 + 0xd6,
                      temp_value,(char)uStack_10);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cDepthMin_00640388,param_1_00 + 0xd7,temp_value,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cDepthMax_0064037c,param_1_00 + 0xd8,temp_value,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cDepthChange_0064036c,param_1_00 + 0xd9,temp_value,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cSalinityChange_0064035c,param_1_00 + 0xda,temp_value,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cSalinityHealthChange_00640344,param_1_00 + 0xdb,
              temp_value,0);
    bVar10 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cHappyReproduceThreshold_00640328,
                        param_1_00 + 0xde,temp_value,(char)uStack_10);
    bVar11 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cBuildingUseChance_00640314,param_1_00 + 0xdf,
                        temp_value,(char)uStack_10);
    bVar12 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cNoMateChange_00640304,param_1_00 + 0xe0,
                        temp_value,(char)uStack_10);
    bVar6 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cTimeDeath_006402f8,param_1_00 + 0xe1,temp_value,
                      (char)uStack_10);
    bVar6 = bVar4 & bVar5 & bVar7 & bVar8 & bVar9 & bVar10 & bVar11 & bVar12 & bVar6;
    param_1_00[0xe2] = DAT_0063ffac;
    set_attribute_wrapper(param_1_00,current_animal?,s_cDeathChance_0063ffc4,param_1_00 + 0xe2,0,0);
    param_1_00[0xe3] = DAT_0063ffb0;
    set_attribute_wrapper(param_1_00,current_animal?,s_cDirtChance_0063ffb8,param_1_00 + 0xe3,0,0);
    cVar3 = (**(code **)(*param_1_00 + 0x44))();
    if (cVar3 != '\0') {
      bVar4 = set_attribute_wrapper
                        (param_1_00,current_animal?,s_cWaterNeeded_00640854,param_1_00 + 0xe4,
                        temp_value,(char)uStack_10);
  LandNeeded
                        temp_value,(char)uStack_10);
      bVar7 = set_attribute_wrapper
                        (param_1_00,current_animal?,s_cEnterWaterChance_00640834,param_1_00 + 0xe7,
                        temp_value,(char)uStack_10);
      bVar8 = set_attribute_wrapper
                        (param_1_00,current_animal?,s_cEnterLandChance_00640820,param_1_00 + 0xe9,
                        temp_value,(char)uStack_10);
      bVar6 = bVar6 & bVar4 & bVar5 & bVar7 & bVar8;
    }
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cUnderwaterNeeded_006402e4,param_1_00 + 0xe5,temp_value,0)
    ;
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cEnterTankChance_006402d0,param_1_00 + 0xe8,temp_value,0);
    bVar4 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cDrinkWaterChance_006402bc,param_1_00 + 0xea,
                      temp_value,(char)uStack_10);
    bVar5 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cChaseAnimalChance_006402a8,param_1_00 + 0xeb,
                      temp_value,(char)uStack_10);
    bVar7 = set_attribute_wrapper
                      (param_1_00,current_animal?,s_cClimbsCliffs_00640298,param_1_00 + 0xec,
                      temp_value,(char)uStack_10);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cRampageThreshold_00640284,param_1_00 + 0xfd,temp_value,0)
    ;
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cRampageChance_00640274,param_1_00 + 0xfe,temp_value,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cRampageTimeMin_00640264,param_1_00 + 0xff,temp_value,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cRampageTimeMax_00640254,param_1_00 + 0x100,temp_value,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cFacesYOffset_00640244,param_1_00 + 0x107,temp_value,0);
    iStack_4f0 = 0;
    status_check_result =
        set_attribute_wrapper(param_1_00,current_animal?,s_cSmallZoodoo_00640234,&iStack_4f0,0,0);
    if ((status_check_result & 1) != 0) {
      *(bool *)((int)param_1_00 + 0x3ce) = iStack_4f0 == 1;
    }
    local_504 = (int *)0x0;
    status_check_result =
        set_attribute_wrapper(param_1_00,current_animal?,s_cGiantZoodoo_00640224,&local_504,0,0);
    if ((status_check_result & 1) != 0) {
      *(bool *)(param_1_00 + 0xf4) = local_504 == (int *)0x1;
    }
    status_check_result =
        set_attribute_wrapper(param_1_00,current_animal?,s_cDinoZoodoo_00640218,&stack0xfffffae0,0,0)
    ;
    if ((status_check_result & 1) != 0) {
      *(undefined *)((int)param_1_00 + 0x3cf) = 0;
    }
    iStack_4c4 = 0;
    bVar8 = set_attribute_wrapper(param_1_00,current_animal?,s_cIsJumper_0064020c,&iStack_4c4,0,0);
    if ((bVar8 & 1) != 0) {
      *(bool *)((int)param_1_00 + 0x3cd) = iStack_4c4 == 1;
    }
    set_attribute_wrapper(param_1_00,current_animal?,s_cCrushesFences_006401fc,param_1_00 + 0xf7,0,0);
    iStack_4c8 = 0;
    bVar9 = set_attribute_wrapper(param_1_00,current_animal?,s_cIsClimber_006401f0,&iStack_4c8,0,0);
    if ((bVar9 & 1) != 0) {
      *(bool *)(param_1_00 + 0xf3) = iStack_4c8 == 1;
    }
    iStack_4b8 = 0;
    status_check_result =
        set_attribute_wrapper(param_1_00,current_animal?,s_cIsSpecialAnimal_006401dc,&iStack_4b8,0,0)
    ;
    if ((status_check_result & 1) != 0) {
      *(bool *)((int)param_1_00 + 0x3d1) = iStack_4b8 == 1;
    }
    iStack_4c0 = 0;
    status_check_result =
        set_attribute_wrapper(param_1_00,current_animal?,s_cNeedShelter_006401cc,&iStack_4c0,0,0);
    if ((status_check_result & 1) != 0) {
      *(bool *)((int)param_1_00 + 0x3d2) = iStack_4c0 == 1;
    }
    iStack_4b0 = 0;
    status_check_result =
        set_attribute_wrapper(param_1_00,current_animal?,s_cNeedToys_006401c0,&iStack_4b0,0,0);
    if ((status_check_result & 1) != 0) {
      *(bool *)((int)param_1_00 + 0x3d3) = iStack_4b0 == 1;
    }
    iStack_4d8 = 0;
    status_check_result =
        set_attribute_wrapper(param_1_00,current_animal?,s_cBabiesAttack_006401b0,&iStack_4d8,0,0);
    if ((status_check_result & 1) != 0) {
      *(bool *)(param_1_00 + 0xf5) = iStack_4d8 == 1;
    }
    iStack_4d4 = 0;
    status_check_result =
        set_attribute_wrapper(param_1_00,current_animal?,s_cIsManEater_006401a4,&iStack_4d4,0,0);
    if ((status_check_result & 1) != 0) {
      *(bool *)((int)param_1_00 + 0x3d5) = iStack_4d4 == 1;
    }
    iStack_4cc = 0;
    status_check_result =
        set_attribute_wrapper(param_1_00,current_animal?,s_cPreattack_00640198,&iStack_4cc,0,0);
    if ((status_check_result & 1) != 0) {
      *(bool *)((int)param_1_00 + 0x3d6) = iStack_4cc == 1;
    }
    iStack_4dc = 0;
    status_check_result =
        set_attribute_wrapper(param_1_00,current_animal?,s_cHeliRecovery_00640188,&iStack_4dc,0,0);
    if ((status_check_result & 1) != 0) {
      *(bool *)((int)param_1_00 + 0x3d7) = iStack_4dc == 1;
    }
    iStack_4b4 = 0;
    status_check_result =
        set_attribute_wrapper(param_1_00,current_animal?,s_cAvoidEdges_0063f8d4,&iStack_4b4,0,0);
    if ((status_check_result & 1) != 0) {
      param_1_00[0x1d] = iStack_4b4;
    }
    iStack_4d0 = 0;
    status_check_result =
        set_attribute_wrapper(param_1_00,current_animal?,s_cKeepMoving_0064017c,&iStack_4d0,0,0);
    if ((status_check_result & 1) != 0) {
      *(bool *)(param_1_00 + 0x113) = iStack_4d0 == 1;
    }
    iStack_4bc = 0;
    status_check_result =
        set_attribute_wrapper(param_1_00,current_animal?,s_cStaySick_00640170,&iStack_4bc,0,0);
    if ((status_check_result & 1) != 0) {
      *(bool *)((int)param_1_00 + 0x44d) = iStack_4bc == 1;
    }
    iStack_4e0 = 0;
    status_check_result =
        set_attribute_wrapper
                  (param_1_00,current_animal?,s_cResetPreyPosition_0064015c,&iStack_4e0,0,0);
    if ((status_check_result & 1) != 0) {
      *(bool *)(param_1_00 + 0xf6) = iStack_4e0 == 1;
    }
    bStack_532 = set_attribute_wrapper
                          (param_1_00,current_animal?,s_cBashStrength_0064014c,param_1_00 + 0xed,
                            temp_value,(char)uStack_10);
    bStack_532 = bVar6 & bVar4 & bVar5 & bVar7 & bVar8 & 1 & bVar9 & 1 & bStack_532;
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cTestFenceChance_0063fc48,param_1_00 + 0xf8,0,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cTestFenceChanceDrop_00640134,param_1_00 + 0xf9,0,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cMinTestFenceChance_00640120,param_1_00 + 0xfa,0,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cZapHappinessChange_0064010c,param_1_00 + 0x9c,0,0);
    set_attribute_wrapper
              (param_1_00,current_animal?,s_cTestFenceOffset_006400f8,param_1_00 + 0xfb,0,0);
    param_1_00[0xfc] = param_1_00[0x14];
    set_attribute_wrapper(param_1_00,current_animal?,s_cBoxedIconZoom_006400e8,param_1_00 + 0xfc,0,0);
    status_check_result =
        set_attribute_wrapper(param_1_00,current_animal?,s_cLaysEggs_006400dc,&stack0xfffffadc,0,0);
  
    ppiStack_530 = (int **)0x0;
    status_check_result =
        set_attribute_wrapper(param_1_00,current_animal?,s_cEatsEggs_006400d0,&ppiStack_530,0,0);

    set_attribute_wrapper(param_1_00,current_animal?,s_cTimeToHatch_006400c0,param_1_00 + 0x102,0,0);
    set_attribute_wrapper(param_1_00,current_animal?,s_cEggIconZoom_006400b0,param_1_00 + 0x103,0,0);
    set_attribute_wrapper(param_1_00,current_animal?,s_cMinHatchHits_006400a0,param_1_00 + 0x108,0,0);
    set_attribute_wrapper(param_1_00,current_animal?,s_cBoxFootprintX_00640090,param_1_00 + 0x76,0,0);
    set_attribute_wrapper(param_1_00,current_animal?,s_cBoxFootprintY_00640080,param_1_00 + 0x77,0,0);
    set_attribute_wrapper(param_1_00,current_animal?,s_cBoxFootprintZ_00640070,param_1_00 + 0x78,0,0);
    set_attribute_wrapper(param_1_00,current_animal?,s_cEggFootprintX_00640060,param_1_00 + 0x104,0,0)
    ;
    set_attribute_wrapper(param_1_00,current_animal?,s_cEggFootprintY_00640050,param_1_00 + 0x105,0,0)
    ;
    set_attribute_wrapper(param_1_00,current_animal?,s_cEggFootprintZ_00640040,param_1_00 + 0x106,0,0)
    ;
  }
}

Shows:
Show {
              set_attribute(s_behavior_00642d34,s_returnToKeeperThreshold_00642d40,
                    &return_to_keeper_threshold);
      set_attribute(s_timing_00642d14,s_infrequentShowInterval_00642d1c,&infrequent_show_interval);
      set_attribute(s_timing_00642d14,s_frequentShowInterval_00642cfc,&frequent_show_interval);
      set_attribute(s_timing_00642d14,s_continuousShowInterval_00642ce4,&continuous_show_interval);
      set_config_item(&DAT_00638da8,s_showAdmissionIncrement_00642ccc,&show_admission_increment);
      maxShowAdmission: ,
      set_config_item(&DAT_00638da8,s_minShowAdmission_00642ca4,&min_show_admission);
      set_sound_item?(s_sounds_00642c90,s_startSound_00642c98,&show_start_sound??);
      set_sound_item?(s_sounds_00642c90,s_endSound_00642c84,&show_end_sound??);
      maxLength: 0
}

Tank:
Tank {
    saltWater: 1.50,
    freshWater: 1.00,
    wallHeightPriceDivisor: 5,
    initialSink: 4,
    initialSinkShow: 8,
    initialHeight: 5,
    initialHeightShow: 9,
    initialWaterLevel: 0,
    initialFillState: 1, // I think this is an object with 4 values
    initialSalinity: 100,
    initialTemperature: 0,
    maximumTankHeight: 20,
    waterOffset: -1,
    tankTerrain: 2,
    tankTerrainShow: 0.01,
    initialWaterPurity: 100,
    murkyWaterPurity: 60,
    veryMurkyWaterPurity: .13,
    extremelyMurkyWaterPurity: .13,
    waterPurityDecayTime: 30000
}

Fences:

Configuration is done at 004bb8ed
Fence {
        PurchaseCost: ?,
        NameID: ?,
        HelpID: ?,
        Strength: ?, [4-bytes] (68 Offset) // How strong the fence is. If low enough, animals can break straight through
        Life: 0-10, [4-bytes] (6C Offset) // Spawn health. 0 is fully destroyed
        DecayedLife: ?, [4-bytes] 
        DecayDelta: ?, [4-bytes] 
        Height: ?,
        Selectable: ?,
        SeeThrough: ?,
        NoDrawWater: ?,
        IsJumpable: ?,
        IsClimbable: ?,
        IsElectrified: ?,
        Indestructible: ?,
        IsShowFence: ?
}

Chain-link Fence {
        PurchaseCost: ,
        NameID: ?,
        HelpID: ?,
        Strength: 200,
        Life: 10,
        DecayedLife: 5,
        DecayDelta: 25,
        Height: ?,
        Selectable: ?,
        SeeThrough: ?,
        NoDrawWater: ?,
        IsJumpable: ?,
        IsClimbable: ?,
        IsElectrified: ?,
        Indestructible: ?,
        IsShowFence: ?
}

Electrified Chain-link Fence {
        PurchaseCost: 250,
        NameID: ?,
        HelpID: ?,
        Strength: 480,
        Life: 18,
        DecayedLife: 9,
        DecayDelta: 18,
        Height: ?,
        Selectable: ?,
        SeeThrough: ?,
        NoDrawWater: ?,
        IsJumpable: ?,
        IsClimbable: ?,
        IsElectrified: ?,
        Indestructible: ?,
        IsShowFence: ?
}